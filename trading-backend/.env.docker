# ============================================
# TradingBot AI - Docker Environment Variables
# ============================================
# IMPORTANT: Copy this file to .env.docker and fill in your actual values
# DO NOT commit .env.docker with real credentials to version control

# ============================================
# Application Settings
# ============================================
APP_NAME=TradingBot AI
DEBUG=False
ENVIRONMENT=production
LOG_LEVEL=INFO
API_V1_PREFIX=/api/v1

# ============================================
# Database (PostgreSQL)
# ============================================
POSTGRES_USER=tradingbot
POSTGRES_PASSWORD=CHANGE_THIS_STRONG_PASSWORD
POSTGRES_DB=tradingbot
DATABASE_URL=postgresql://tradingbot:CHANGE_THIS_STRONG_PASSWORD@postgres:5432/tradingbot

# ============================================
# Redis Cache
# ============================================
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD
REDIS_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@redis:6379/0

# ============================================
# Security Keys
# ============================================
# Generate with: openssl rand -hex 32
SECRET_KEY=CHANGE_THIS_SECRET_KEY_USE_OPENSSL_RAND_HEX_32

# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
WEBHOOK_SECRET=CHANGE_THIS_WEBHOOK_SECRET

# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=CHANGE_THIS_ENCRYPTION_KEY

# ============================================
# Binance Futures API
# ============================================
# IMPORTANT: For production, use MAINNET keys and set BINANCE_TESTNET=False
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here
BINANCE_TESTNET=True

# ============================================
# OKX Futures API (Optional)
# ============================================
OKX_API_KEY=your_okx_api_key_here
OKX_API_SECRET=your_okx_api_secret_here
OKX_PASSPHRASE=your_okx_passphrase_here
OKX_TESTNET=True

# ============================================
# AI APIs
# ============================================
# OpenAI GPT-4 API
OPENAI_API_KEY=sk-...

# Anthropic Claude API
ANTHROPIC_API_KEY=sk-ant-...

# Local Llama Server (optional)
LLAMA_API_URL=http://host.docker.internal:11434

# ============================================
# Telegram Bot
# ============================================
# Get from @BotFather on Telegram
TELEGRAM_BOT_TOKEN=123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11

# ============================================
# Trading Parameters
# ============================================
# Default leverage (1-125 for Binance Futures)
DEFAULT_LEVERAGE=3

# Maximum position size as percentage of account balance (0.01 = 1%)
MAX_POSITION_SIZE_PCT=0.10

# Default stop loss percentage (0.02 = 2%)
DEFAULT_STOP_LOSS_PCT=0.02

# Default take profit percentage (0.04 = 4%)
DEFAULT_TAKE_PROFIT_PCT=0.04

# ============================================
# Performance & Optimization
# ============================================
# Redis cache TTL in seconds (3600 = 1 hour)
CACHE_TTL=3600

# Enable query caching
ENABLE_CACHE=True

# Database connection pool size
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10

# ============================================
# Monitoring & Logging
# ============================================
# Sentry DSN for error tracking (optional)
SENTRY_DSN=

# Enable performance monitoring
ENABLE_PERFORMANCE_MONITORING=True

# Enable slow query logging (queries > 1 second)
ENABLE_SLOW_QUERY_LOG=True

# ============================================
# CORS Settings
# ============================================
# Allowed origins for CORS (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001,https://your-domain.com

# ============================================
# Rate Limiting
# ============================================
# Enable rate limiting
ENABLE_RATE_LIMIT=True

# Requests per minute limit
RATE_LIMIT_PER_MINUTE=60

# ============================================
# Worker Configuration
# ============================================
# Number of Uvicorn workers
WORKERS=4

# Worker timeout in seconds
WORKER_TIMEOUT=120

# ============================================
# AWS Configuration (for Phase 8)
# ============================================
AWS_REGION=ap-northeast-2
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# S3 bucket for model storage
S3_BUCKET_NAME=

# ============================================
# Health Check
# ============================================
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
