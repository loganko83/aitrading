# Application
DEBUG=True

# Database
DATABASE_URL="postgresql://user:password@localhost:5432/tradingbot"

# Binance API (Use testnet credentials for development)
BINANCE_API_KEY="your_testnet_api_key"
BINANCE_API_SECRET="your_testnet_api_secret"
BINANCE_TESTNET=True

# AI APIs
OPENAI_API_KEY="sk-..."
ANTHROPIC_API_KEY="sk-ant-..."

# Redis
REDIS_URL="redis://localhost:6379"

# Security
SECRET_KEY="your-secret-key-here-generate-with-openssl-rand-hex-32"
WEBHOOK_SECRET="generate-with-python-secrets-token_urlsafe-32"
ENCRYPTION_KEY="generate-with-python-cryptography-fernet-generate_key"
ENCRYPTION_SALT="generate-with-python-secrets-token_bytes-32-base64"

# 보안 키 생성 방법:
# SECRET_KEY: openssl rand -hex 32
# WEBHOOK_SECRET: python -c "import secrets; print(secrets.token_urlsafe(32))"
# ENCRYPTION_KEY: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# ENCRYPTION_SALT: python -c "import secrets; import base64; print(base64.b64encode(secrets.token_bytes(32)).decode())"

# Trading Parameters (adjust based on risk tolerance)
DEFAULT_LEVERAGE=3
MAX_POSITION_SIZE_PCT=0.10
ATR_PERIOD=14

# AI Ensemble Weights (must sum to 1.0)
ML_WEIGHT=0.40
GPT4_WEIGHT=0.25
LLAMA_WEIGHT=0.25
TA_WEIGHT=0.10

# Entry/Exit Thresholds
MIN_PROBABILITY=0.80
MIN_CONFIDENCE=0.70
MIN_AGREEMENT=0.70

# Telegram Bot (Optional)
TELEGRAM_BOT_TOKEN=""  # @BotFather에서 발급받은 봇 토큰 (선택사항)
