global:
  resolve_timeout: 5m
  # Uncomment and configure when notification channels are ready
  # slack_api_url: '${SLACK_WEBHOOK_URL}'
  # smtp_from: 'alerts@trendy.storydot.kr'
  # smtp_smarthost: 'smtp.gmail.com:587'
  # smtp_auth_username: '${SMTP_USERNAME}'
  # smtp_auth_password: '${SMTP_PASSWORD}'

# Templates for alert notifications
# templates:
#   - '/etc/alertmanager/templates/*.tmpl'

# Route alerts to different receivers based on labels
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default'

  routes:
    # Critical alerts go to multiple channels
    - match:
        severity: critical
      receiver: 'critical-alerts'
      continue: true

    # Trading-specific alerts
    - match:
        component: trading
      receiver: 'trading-team'
      continue: true

    # Backend/Frontend alerts
    - match_re:
        component: backend|frontend
      receiver: 'dev-team'

    # Database alerts
    - match:
        component: database
      receiver: 'ops-team'

    # Business metrics alerts
    - match:
        component: business
      receiver: 'business-team'

# Alert receivers configuration
receivers:
  - name: 'default'
    # Default receiver logs alerts to Alertmanager UI
    # Configure notification channels below when ready

  - name: 'critical-alerts'
    # Critical alerts receiver
    # Add Slack, Telegram, PagerDuty, Email configs here when ready

  - name: 'trading-team'
    # Trading team receiver
    # Add notification configs when ready

  - name: 'dev-team'
    # Development team receiver
    # Add notification configs when ready

  - name: 'ops-team'
    # Operations team receiver
    # Add notification configs when ready

  - name: 'business-team'
    # Business team receiver
    # Add notification configs when ready

# Inhibition rules
inhibit_rules:
  # Inhibit non-critical alerts if critical alert is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'component']

  # If backend is down, don't alert on API errors
  - source_match:
      alertname: 'BackendDown'
    target_match_re:
      alertname: 'HighErrorRate|SlowAPIResponse'
    equal: ['instance']

  # If database is down, don't alert on connection errors
  - source_match:
      alertname: 'DatabaseDown'
    target_match_re:
      alertname: 'HighDatabaseConnections|SlowDatabaseQueries'
    equal: ['instance']

  # If exchange API is down, don't alert on order failures
  - source_match:
      alertname: 'ExchangeAPIDown'
    target_match:
      alertname: 'HighOrderFailureRate'
    equal: ['exchange']
