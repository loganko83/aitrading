name: Frontend CI

on:
  push:
    branches: [ master, main, develop ]
    paths:
      - 'trading-frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ master, main, develop ]
    paths:
      - 'trading-frontend/**'

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: trading-frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./trading-frontend
      run: npm ci

    - name: Run ESLint
      working-directory: ./trading-frontend
      run: npm run lint
      continue-on-error: true

    - name: Run TypeScript type checking
      working-directory: ./trading-frontend
      run: npx tsc --noEmit
      continue-on-error: true

    - name: Check code formatting (Prettier)
      working-directory: ./trading-frontend
      run: npx prettier --check "**/*.{ts,tsx,js,jsx,json,css,md}"
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: lint-and-type-check

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: trading-frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./trading-frontend
      run: npm ci

    - name: Run Jest tests
      working-directory: ./trading-frontend
      run: npm test -- --coverage --watchAll=false
      continue-on-error: true
      env:
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test_secret_for_ci
        NEXT_PUBLIC_API_URL: http://localhost:8001

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./trading-frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: trading-frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./trading-frontend
      run: npm ci

    - name: Build Next.js application
      working-directory: ./trading-frontend
      run: npm run build
      env:
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test_secret_for_ci
        NEXT_PUBLIC_API_URL: http://localhost:8001

    - name: Check build output
      working-directory: ./trading-frontend
      run: |
        ls -lah .next/
        du -sh .next/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nextjs-build
        path: |
          trading-frontend/.next/
          trading-frontend/public/
        retention-days: 7

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: trading-frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./trading-frontend
      run: |
        npm ci
        npx playwright install --with-deps

    - name: Run Playwright E2E tests
      working-directory: ./trading-frontend
      run: npx playwright test
      continue-on-error: true
      env:
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test_secret_for_ci
        NEXT_PUBLIC_API_URL: http://localhost:8001

    - name: Upload Playwright report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: trading-frontend/playwright-report/
        retention-days: 7

  lighthouse:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: trading-frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./trading-frontend
      run: npm ci

    - name: Build application
      working-directory: ./trading-frontend
      run: npm run build
      env:
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test_secret_for_ci
        NEXT_PUBLIC_API_URL: http://localhost:8001

    - name: Start Next.js server
      working-directory: ./trading-frontend
      run: |
        npm start &
        sleep 10
      env:
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: test_secret_for_ci
        NEXT_PUBLIC_API_URL: http://localhost:8001

    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun --collect.url=http://localhost:3000
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run npm audit
      working-directory: ./trading-frontend
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=trading-frontend/package.json
