name: Backend CI

on:
  push:
    branches: [ master, main, develop ]
    paths:
      - 'trading-backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ master, main, develop ]
    paths:
      - 'trading-backend/**'

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('trading-backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./trading-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio mypy black flake8 pylint

    - name: Run Black (code formatting check)
      working-directory: ./trading-backend
      run: black --check --diff .
      continue-on-error: true

    - name: Run Flake8 (linting)
      working-directory: ./trading-backend
      run: flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
      continue-on-error: true

    - name: Run MyPy (type checking)
      working-directory: ./trading-backend
      run: mypy app/ --ignore-missing-imports
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    needs: lint-and-type-check

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: tradingbot
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: tradingbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('trading-backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./trading-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio

    - name: Set up test environment variables
      run: |
        echo "DATABASE_URL=postgresql://tradingbot:testpassword@localhost:5432/tradingbot_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test_secret_key_for_ci" >> $GITHUB_ENV
        echo "ENCRYPTION_KEY=test_encryption_key_for_ci_32chars" >> $GITHUB_ENV
        echo "WEBHOOK_SECRET=test_webhook_secret" >> $GITHUB_ENV
        echo "DEBUG=True" >> $GITHUB_ENV

    - name: Run database migrations
      working-directory: ./trading-backend
      run: |
        alembic upgrade head
      continue-on-error: true

    - name: Run tests with coverage
      working-directory: ./trading-backend
      run: |
        pytest tests/ -v --cov=app --cov-report=xml --cov-report=term-missing
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./trading-backend/coverage.xml
        flags: backend
        name: backend-coverage
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install safety
      run: pip install safety bandit

    - name: Run safety check (dependency vulnerabilities)
      working-directory: ./trading-backend
      run: safety check --file requirements.txt --json
      continue-on-error: true

    - name: Run Bandit (security linting)
      working-directory: ./trading-backend
      run: bandit -r app/ -f json -o bandit-report.json
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          trading-backend/bandit-report.json
      continue-on-error: true

  build-docker:
    runs-on: ubuntu-latest
    needs: [test, security-scan]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (no push)
      working-directory: ./trading-backend
      run: |
        docker build -t trading-backend:${{ github.sha }} .
      continue-on-error: true

    - name: Test Docker image
      run: |
        docker run --rm trading-backend:${{ github.sha }} python -c "import app; print('Backend image OK')"
      continue-on-error: true
